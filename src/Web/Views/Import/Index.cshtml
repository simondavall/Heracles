@model ImportViewModel
@{
    ViewBag.Title = "Import";
}

<div class="subNavcontainer clearfix">
    <partial name="_SubNavigation" model="@Model.SubNavigationViewModel"/>
</div>

<div asp-validation-summary="All" class="text-danger"></div>

<div class="container">
    <div class="columnContent clearfix">
        @using (Html.BeginForm("Upload", "Import", FormMethod.Post,  new { id="uploadForm", enctype = "multipart/form-data"}))
        {
            <input id="processId" name="processId" type="hidden" value="@Model.ProcessId">
            <div class="mainColumnPadding">
                <div class="multipleMapImport">
                    <div class="mappingImportContainer">
                        <div class="header">
                            Import multiple activities
                        </div>
                        <div class="info">
                            <label for="trackFiles" id="trackFileLabel">
                                You can upload multiple activities at once.
                                Please select the GPX files you would like to import.
                            </label>
                        </div>
                        <div class="uploader" id="uniform-trackFiles">
                            <input id="trackFiles" size="30" type="file" name="trackFiles" accept=".gpx,.tcx,.fit" onchange="uploadMultipleTrackFiles()" multiple="multiple" style="opacity: 0;">
                            <span class="filename">No file selected</span>
                            <span class="action">Choose File</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row progressbar" id="progress" style="display:none">
                <div class="progress-bar"></div>
            </div>
        }
        @if (Model.ImportExecuted)
        {
            <div class="importedfiles">
                @if (Model.FilesImported > 0)
                {
                    <div id="successFilesHeader" class="successfiles" style="display: block;">
                        Successfully uploaded @Model.FormatSuccessFormatSuccessfullyImported()
                    </div>
                }
                @if (Model.FilesFailed.Count > 0)
                {
                    <div id="errorFilesHeader" class="failedfiles" style="display: block;">
                        Could not upload the following @Model.FormatDisplay(Model.FilesFailed.Count):
                        <div id="errorFiles">
                            @foreach (var failedFile in @Model.FilesFailed)
                            {
                                <p class="error-file">@failedFile.Filename - [@failedFile.Reason]</p>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    <script type="text/javascript">
        function uploadMultipleTrackFiles() {
            $('#errorFilesPastMaxHeader').hide();
            $('#errorFilesPastMax').html("");
            $('#errorFilesHeader').hide();
            $('#errorFiles').html("");
            $('#successFilesHeader').hide();
            $('#successFiles').html("");
            $("#uploadForm").submit();

            initializeProgress();
            $("#progress").show();
            setTimeout(updateProgress, 2000);
        }

        function initializeProgress() {
            $.get('/api/Import/InitializeProgress', {processId: "@Model.ProcessId"});
        }

        function updateProgress() {
            $.getJSON("/api/Import/UpdateProgress",
                {processId: "@Model.ProcessId"},
                function (data) {
                    var progressVal = parseInt(data.value * 110, 10);
                    $('#progress .progress-bar').css('width', progressVal + '%');
                    if (progressVal >= 100) {
                        setTimeout(hideProgressBar, 1000);
                    }
                    else {
                        setTimeout(updateProgress, 50);
                    }
                });
        }

        function hideProgressBar() {
            $('#progress').hide();
        }    
    </script>
</div>
